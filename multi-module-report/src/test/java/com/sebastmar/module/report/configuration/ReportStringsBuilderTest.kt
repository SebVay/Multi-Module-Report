package com.sebastmar.module.report.configuration

import com.sebastmar.module.report.internal.ReportStrings
import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

internal class ReportStringsBuilderTest {

    private val builder = ReportStringsBuilder()

    @Test
    fun `verify the default top section`() {
        val givenTopSection = "# Updated Modules"

        assertEquals(givenTopSection, builder.topSection)
    }

    @Test
    fun `verify the default bottom section`() {
        val givenDefaultBottom = "_Generated by [multi-module-report](https://github.com/SebVay/Multi-Module-Report)_ with ❤️"

        assertEquals(givenDefaultBottom, builder.bottomSection)
    }

    @Test
    fun `verify the default project root module name`() {
        val givenDefaultName = "Project's Root"

        assertEquals(givenDefaultName, builder.projectRootModuleName)
    }

    @Test
    fun `verify the default unknown module name`() {
        val givenDefaultUnknown = "Others"

        assertEquals(givenDefaultUnknown, builder.unknownModuleName)
    }

    @Test
    fun `verify it builds the default ReportStrings`() {
        val result = builder.build()

        val expected = ReportStrings(
            topSection = builder.topSection,
            bottomSection = builder.bottomSection,
            projectRootModuleName = builder.projectRootModuleName,
            unknownModuleName = builder.unknownModuleName,
        )

        assertEquals(expected.topSection, result.topSection)
        assertEquals(expected.bottomSection, result.bottomSection)
        assertEquals(expected.unknownModuleName, result.unknownModuleName)
        assertEquals(expected.projectRootModuleName, result.projectRootModuleName)
    }

    @Test
    fun `verify it builds the ReportStrings with custom values`() {
        val givenTop = "Custom Top"
        val givenBottom = "Custom Bottom section"
        val givenProjectRoot = "Root"
        val givenUnknown = "Misc"

        val result = builder.apply {
            topSection = givenTop
            bottomSection = givenBottom
            projectRootModuleName = givenProjectRoot
            unknownModuleName = givenUnknown
        }.build()

        val expected = ReportStrings(
            topSection = givenTop,
            bottomSection = givenBottom,
            projectRootModuleName = givenProjectRoot,
            unknownModuleName = givenUnknown,
        )

        assertEquals(expected, result)
    }
}
